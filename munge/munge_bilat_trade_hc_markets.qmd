---
title: "Locating Alternative Trade Partners"
author: "Harriet Goers"
format: 
  html:
    self-contained: true
editor: visual
execute:
  message: false
  warning: false
---

```{r}
library(tidyverse)
library(rio)
library(here)
library(janitor)
```

First we need to read in our bilateral trade data:

```{r}
df_raw <- map_dfr(
  list.files(here("data-raw", "bilat_trade"), full.names = T), 
  ~ read_csv(.x, col_types = "ccccccccccccccccccccccccccccccccccc")
) |> 
  clean_names() |> 
  transmute(
    year = as.numeric(yr), 
    direction = rg_desc, 
    reporter = rt_title, 
    partner = pt_title, 
    cmd_code, 
    trade_value = as.numeric(trade_value)
  )
```

Now we can see how big a gap the potential imposing state (`reporter`) can threaten to create in the potential target state's (`partner`) economy:

```{r}
df <- df_raw |> 
  filter(partner != "World")

df
```

Now we need to work out whether the potential target could fill the gap left by the potential imposer.

First, we need global trade from all other states participating in this market:

```{r}
alt_summary <- read_csv(here("data", "hc_product_global.csv"), col_types = c(cmd_code = "c")) |> 
  select(year, direction, alt_reporter = reporter, cmd_code, alt_trade_value = trade_value) |> 
  group_by(year, direction, cmd_code) |> 
  arrange(desc(alt_trade_value)) |> 
  slice_tail(n = -1L) |> 
  ungroup()
```

We want to work out whether these alternate trade partners can fill the gap. First, let's identify the commodities for which no combination of alternative trade partners could fill the gap.

```{r}
gap_df <- df |> 
  left_join(alt_summary, by = c("year", "direction", "cmd_code"))

hv_df <- gap_df |> 
  group_by(year, direction, reporter, partner, cmd_code, trade_value) |> 
  summarise(alt_total_value = sum(alt_trade_value)) |> 
  mutate(
    gap = trade_value - alt_total_value,
    gap_prop = (gap / alt_total_value) + 1,
    gap_never_filled = if_else(trade_value > alt_total_value, 1, 0)
  ) |> 
  filter(gap_never_filled == 1) |> 
  left_join(
    read_csv(here("data", "product_codes.csv"), col_types = c(id = "c")) |> 
      select(cmd_code = id, cmd_desc = text)
  ) |> 
  relocate(cmd_desc, .after = cmd_code)
```

I refer to these markets in my article.

```{r}
export(hv_df, here("data", "highly_vulnernable_bilat_trade.csv"))
```

