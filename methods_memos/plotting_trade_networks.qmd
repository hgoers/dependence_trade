---
title: "Methods Memo"
subtitle: "Plotting Product Trade Networks"
author: "Harriet Goers"
format: 
  html:
    self-contained: true
editor: visual
toc: true
execute: 
  warning: false
  message: false
---

```{r}
library(tidyverse)
library(jsonlite)
library(glue)
library(tidygraph)
library(ggraph)
```

## Sourcing raw trade data

I use annual product-level trade data collected by UN COMTRADE. I collect these data using the UN COMTRADE API.

We need to get the country ID codes and specific spelling used by the UN COMTRADE to pull reporter level data. We can do this by pull them directly from the UN COMTRADE API. 

```{r}
country_id <- fromJSON("https://comtrade.un.org/Data/cache/reporterAreas.json")$results

head(country_id)
```

We can collect the data at the reporter and product level. Full documentation for the API can be found [here](https://comtrade.un.org/data/doc/api/#DataRequests).

```{r}
comtrade_pull <- function(r, cmd, dir, yr) {

  query <- glue("https://comtrade.un.org/api/get?r={r}&cc={cmd}&rg={dir}&ps={yr}&fmt=json&freq=A&head=H")

  result <- tryCatch(
    
    fromJSON(query),
    
    error = function(err) {

      print("Limit reached, wait one hour")
      Sys.sleep(3600)
      return(fromJSON(query))

    }
    
  )

  trade_df <- fromJSON(query)$dataset |>
    as_tibble()

  if (length(trade_df) != 0) {
    
    print(glue("Pulling data for {r}"))
    return (trade_df)
    
  } else {
    
    print(glue("No data for {r}"))
    return(NULL)
    
  }

}
```

For example, we can pull Australia's export trade in silk in 2019:

```{r}
aus_x_silk_raw <- comtrade_pull(36, 50, 2, 2019)

head(aus_x_silk_raw)
```

## Cleaning up raw trade data

We now want to clean up this bilateral trade data.

```{r}
aus_x_silk <- aus_x_silk_raw |> 
  janitor::clean_names() |> 
  select(
    yr, direction = rg_desc, reporter = rt_title, partner = pt_title, cmd_code, trade_value
  ) |> 
  filter(partner != "World")

head(aus_x_silk)
```

### Create a node list

We need a list of all the individual countries involved in silk trade with Australia. 

```{r}
reporter <- distinct(aus_x_silk, entity = reporter)
partners <- distinct(aus_x_silk, entity = partner)

nodes <- bind_rows(reporter, partners)

nodes
```

### Create an edge list

```{r}
edges <- aus_x_silk |> 
  select(reporter, partner, trade_value)

head(edges)
```

## Create a network

```{r}
trade_network <- tbl_graph(
  nodes = nodes, 
  edges = edges,
  directed = T
)

trade_network
```

## Plot the network

```{r}
ggraph(trade_network) + 
  geom_edge_link(aes(width = trade_value), alpha = 0.8, arrow = arrow(length = unit(2, 'mm'))) + 
  scale_edge_width(range = c(0.2, 2)) + 
  geom_node_point() + 
  geom_node_text(aes(label = entity), repel = TRUE) +
  theme_graph()
```
